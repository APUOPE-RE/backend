/*
 * This file is generated by jOOQ.
 */
package com.apuope.apuope_re.jooq.tables.records;


import com.apuope.apuope_re.jooq.tables.Quiz;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class QuizRecord extends UpdatableRecordImpl<QuizRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>apuope.quiz.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>apuope.quiz.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>apuope.quiz.account_id</code>.
     */
    public void setAccountId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>apuope.quiz.account_id</code>.
     */
    public Integer getAccountId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>apuope.quiz.lecture_id</code>.
     */
    public void setLectureId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>apuope.quiz.lecture_id</code>.
     */
    public Integer getLectureId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>apuope.quiz.max_points</code>.
     */
    public void setMaxPoints(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>apuope.quiz.max_points</code>.
     */
    public Integer getMaxPoints() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached QuizRecord
     */
    public QuizRecord() {
        super(Quiz.QUIZ);
    }

    /**
     * Create a detached, initialised QuizRecord
     */
    public QuizRecord(Integer id, Integer accountId, Integer lectureId, Integer maxPoints) {
        super(Quiz.QUIZ);

        setId(id);
        setAccountId(accountId);
        setLectureId(lectureId);
        setMaxPoints(maxPoints);
        resetChangedOnNotNull();
    }
}
