/*
 * This file is generated by jOOQ.
 */
package com.apuope.apuope_re.jooq.tables.records;


import com.apuope.apuope_re.jooq.tables.Conversation;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ConversationRecord extends UpdatableRecordImpl<ConversationRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>apuope.conversation.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>apuope.conversation.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>apuope.conversation.account_id</code>.
     */
    public void setAccountId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>apuope.conversation.account_id</code>.
     */
    public Integer getAccountId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>apuope.conversation.chapter_id</code>.
     */
    public void setChapterId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>apuope.conversation.chapter_id</code>.
     */
    public Integer getChapterId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>apuope.conversation.datetime</code>.
     */
    public void setDatetime(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>apuope.conversation.datetime</code>.
     */
    public LocalDateTime getDatetime() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>apuope.conversation.subject</code>.
     */
    public void setSubject(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>apuope.conversation.subject</code>.
     */
    public String getSubject() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ConversationRecord
     */
    public ConversationRecord() {
        super(Conversation.CONVERSATION);
    }

    /**
     * Create a detached, initialised ConversationRecord
     */
    public ConversationRecord(Integer id, Integer accountId, Integer chapterId, LocalDateTime datetime, String subject) {
        super(Conversation.CONVERSATION);

        setId(id);
        setAccountId(accountId);
        setChapterId(chapterId);
        setDatetime(datetime);
        setSubject(subject);
        resetChangedOnNotNull();
    }
}
